substitutions:
  _REGION:   "europe-west1"
  _PROJECT:  "velib-forecast-472820"
  _REPO:     "velib"
  _IMAGE:    "velib-jobs"

  # Racine commune du bucket projet
  _BUCKET:   "gs://velib-forecast-472820_cloudbuild/velib"

  # Parquet-first
  _RAW:      "gs://velib-forecast-472820_cloudbuild/velib/bronze"   # snapshots 5min
  _DAILY:    "gs://velib-forecast-472820_cloudbuild/velib/daily"    # shards quotidiens (PARQUET)
  _SERVING:  "gs://velib-forecast-472820_cloudbuild/velib/serving"  # artefacts d'aggrégation (latest_7d, monthly, features...)

  # (optionnel) exports & modèles
  _SERVE4H:  "gs://velib-forecast-472820_cloudbuild/velib/serving/features_4h"
  _MODELS:   "gs://velib-forecast-472820_cloudbuild/velib/models"

steps:
# Build & Push
- name: gcr.io/cloud-builders/docker
  args:
    - "build"
    - "-f"
    - "service/Dockerfile"
    - "-t"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
    - "service"

- name: gcr.io/cloud-builders/docker
  args:
    - "push"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"

# === Jobs Parquet-first ===

# 1) Ingest: snapshots 5 min -> ${_RAW}/date=YYYY-MM-DD/hour=HH/*.parquet
- name: gcr.io/cloud-builders/gcloud
  args:
    - "run"
    - "jobs"
    - "update"
    - "velib-ingest"
    - "--region"
    - "${_REGION}"
    - "--image"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
    - "--update-env-vars"
    - "JOB=ingest,GCS_RAW_PREFIX=${_RAW}"

# 2) Compact daily: lit ${_RAW} J, écrit ${_DAILY}/velib_YYYYMMDD.parquet
- name: gcr.io/cloud-builders/gcloud
  args:
    - "run"
    - "jobs"
    - "update"
    - "velib-compact-daily"
    - "--region"
    - "${_REGION}"
    - "--image"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
    - "--update-env-vars"
    - "JOB=compact_daily,GCS_RAW_PREFIX=${_RAW},GCS_DAILY_PREFIX=${_DAILY}"

# 3) Latest 7d: lit 7 derniers daily, écrit ${_SERVING}/latest_7d/latest_7d.parquet
- name: gcr.io/cloud-builders/gcloud
  args:
    - "run"
    - "jobs"
    - "update"
    - "velib-latest-7d"
    - "--region"
    - "${_REGION}"
    - "--image"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
    - "--update-env-vars"
    - "JOB=latest_7d,GCS_DAILY_PREFIX=${_DAILY},GCS_SERVING_PREFIX=${_SERVING}/latest_7d"

# 4) Compact monthly: lit les daily du mois, écrit ${_SERVING}/monthly/YYYY-MM.parquet
#    et (optionnel) supprime les daily du mois après succès
- name: gcr.io/cloud-builders/gcloud
  args:
    - "run"
    - "jobs"
    - "update"
    - "velib-compact-monthly"
    - "--region"
    - "${_REGION}"
    - "--image"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
    - "--update-env-vars"
    - "JOB=compact_monthly,GCS_DAILY_PREFIX=${_DAILY},GCS_SERVING_PREFIX=${_SERVING}/monthly,DELETE_DAILIES=1"

# (Optionnel) Features 4h si tu l’utilises encore pour le modèle temps réel
- name: gcr.io/cloud-builders/gcloud
  args:
    - "run"
    - "jobs"
    - "update"
    - "velib-features-4h"
    - "--region"
    - "${_REGION}"
    - "--image"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
    - "--update-env-vars"
    - "JOB=build_features_4h,GCS_RAW_PREFIX=${_RAW},GCS_SERVING_PREFIX=${_SERVE4H},TZ_APP=Europe/Paris"

# (Optionnel) training — à n’activer que si train_model.py lit bien depuis Parquet (sinon on l’ajuste)
# - name: gcr.io/cloud-builders/gcloud
#   args:
#     - "run"
#     - "jobs"
#     - "update"
#     - "velib-train-daily"
#     - "--region"
#     - "${_REGION}"
#     - "--image"
#     - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID"
#     - "--update-env-vars"
#     - "JOB=train_model,FEATURES_PREFIX=${_SERVE4H},MODELS_PREFIX=${_MODELS},TRAIN_DAYS=45,GCS_LOCK=${_BUCKET}/locks/train.lock"

images:
- ${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_IMAGE}:$BUILD_ID
