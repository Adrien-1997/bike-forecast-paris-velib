name: velib-train

on:
  schedule:
    # Entraînement quotidien à 02:17 UTC
    - cron: "17 2 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: velib-train
  cancel-in-progress: true

jobs:
  train_daily:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install training deps (+ HF)
        run: |
          python -m pip install -U pip
          pip install -r requirements-train.txt huggingface_hub

      # --- NEW: récupérer le parquet depuis Hugging Face ---
      - name: Download velib.parquet from HF
        shell: bash
        env:
          HF_DATASET: ${{ vars.HF_DATASET }}
        run: |
          python - <<'PY'
          import os, pathlib, shutil
          from huggingface_hub import hf_hub_download
          dst_dir = pathlib.Path("docs/exports"); dst_dir.mkdir(parents=True, exist_ok=True)
          hf_path = hf_hub_download(repo_id=os.environ["HF_DATASET"], filename="exports/velib.parquet")
          shutil.copy(hf_path, dst_dir / "velib.parquet")
          print("[train] Downloaded velib.parquet from HF to", dst_dir)
          PY

      - name: Inspect dataset
        shell: bash
        run: |
          python - <<'PY'
          import pandas as pd
          df = pd.read_parquet("docs/exports/velib.parquet")
          print("[train] rows:", len(df), "stations:", df['stationcode'].nunique())
          print("[train] timespan:", df['tbin_utc'].min(), "->", df['tbin_utc'].max())
          PY

      - name: Train LGBM (T+60) and verify model file
        shell: bash
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euxo pipefail
          python - <<'PY'
          from src.forecast import train
          out = train(horizon_minutes=60, lookback_days=30)
          print("[train] OUT:", out)
          PY

          echo "=== After training, list models dir ==="
          ls -lah models || true

          echo "=== Check model presence ==="
          test -f models/lgb_nbvelos_T+60min.joblib || { echo "[CI] modèle introuvable après entraînement"; exit 1; }

      - name: Upload model bundle
        uses: actions/upload-artifact@v4
        with:
          name: model-lgbm-T+60min
          path: models/lgb_nbvelos_T+60min.joblib
          retention-days: 14

      - name: Commit model into repo
        shell: bash
        run: |
          set -euxo pipefail
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add -f models/lgb_nbvelos_T+60min.joblib
          if git diff --cached --quiet; then
            echo "No model change to commit."
          else
            git commit -m "ci(train): update model lgb_nbvelos_T+60min.joblib"
            git push
          fi
