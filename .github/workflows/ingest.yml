name: velib-ingest

on:
  schedule:
    # Quarts d’heure précis en UTC → 01,16,31,46
    - cron: "1,16,31,46 * * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: velib-ingest
  cancel-in-progress: true

jobs:
  ingest_aggregate:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install pipeline deps
        run: |
          python -m pip install -U pip
          pip install -r requirements-pipeline.txt

      - name: Ingest snapshot (OpenData → DuckDB)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m src.ingest

      - name: Aggregate 15min + weather → docs/exports/
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m src.aggregate

      - name: Inspect exports
        shell: bash
        run: |
          echo "=== Exports present? ==="
          ls -lh docs/exports || true
          python - <<'PY'
          import pandas as pd, pathlib
          p = pathlib.Path("docs/exports/velib.parquet")
          if p.exists():
              df = pd.read_parquet(p)
              print("[ingest] rows:", len(df), "stations:", df['stationcode'].nunique())
              print("[ingest] span:", df['tbin_utc'].min(), "->", df['tbin_utc'].max())
          else:
              print("[ingest] docs/exports/velib.parquet NOT FOUND")
          PY

      # ------------ Hugging Face ------------
      - name: Install Hugging Face CLI
        run: |
          python -m pip install -U huggingface_hub
          git lfs install

      - name: Login to Hugging Face
        shell: bash
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -euo pipefail
          if [[ -z "${HF_TOKEN:-}" ]]; then
            echo "HF_TOKEN is empty or not set. Define repository secret HF_TOKEN."
            exit 1
          fi
          huggingface-cli login --token "${HF_TOKEN}" --add-to-git-credential
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Push velib exports (parquet/csv) to HF dataset
        shell: bash
        env:
          HF_DATASET: ${{ vars.HF_DATASET }}   # ex: "adrien/velib-paris-exports"
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -euo pipefail

          if [[ -z "${HF_DATASET:-}" || -z "${HF_TOKEN:-}" ]]; then
            echo "HF_DATASET or HF_TOKEN missing"
            exit 1
          fi

          rm -rf hf-ds
          git clone "https://huggingface.co/datasets/${HF_DATASET}" hf-ds

          mkdir -p hf-ds/exports
          [[ -f docs/exports/velib.parquet ]] && cp -v docs/exports/velib.parquet hf-ds/exports/velib.parquet || true
          [[ -f docs/exports/velib.csv     ]] && cp -v docs/exports/velib.csv     hf-ds/exports/velib.csv     || true

          cd hf-ds
          git add -A
          git commit -m "Update velib exports from ingest (15min)" || echo "Nothing to commit"

          # --- inject token dans le remote pour le push https ---
          HF_USER="${HF_DATASET%%/*}"
          git remote set-url origin "https://${HF_USER}:${HF_TOKEN}@huggingface.co/datasets/${HF_DATASET}"

          git push origin main
